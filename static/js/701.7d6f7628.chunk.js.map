{"version":3,"file":"static/js/701.7d6f7628.chunk.js","mappings":"kSAOMA,EAAa,CACjBC,QAAS,OACTC,cAAe,SACfC,SAAU,QACVC,OAAQ,UAGJC,EAAc,CAClBC,UAAW,QAGPC,EAAc,CAClBC,MAAO,OACPC,aAAc,QAGVC,EAAe,CACnBC,gBAAiB,OACjBC,MAAO,QACP,UAAW,CACTD,gBAAiB,aAsErB,EAlEkB,WAChB,IAAME,GAAWC,EAAAA,EAAAA,MAuBjB,OACE,kBAAMC,MAAOf,EAAYgB,SAtBN,SAACC,GACpBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cAEfP,GACEQ,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGlCE,SACAC,MAAK,SAACC,GACLC,EAAAA,OAAAA,QAAA,UAAkBD,EAAsBE,KAAKC,KAA7C,kBACD,IACAC,OAAM,WACLH,EAAAA,OAAAA,QAAe,8BAChB,IAEHV,EAAKc,OACN,EAGkDC,aAAa,MAA9D,WACE,UAACC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQtB,MAAOV,EAAnC,SAAgD,WAGhD,SAACiC,EAAA,EAAD,CACEC,GAAG,QACHC,KAAK,QACLT,KAAK,QACLU,QAAQ,wEACRC,MAAM,oLACNC,UAAQ,EACRC,YAAY,kBACZ7B,MAAOR,QAGX,UAAC4B,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,CAAYC,QAAQ,WAAWtB,MAAOV,EAAtC,SAAmD,cAGnD,SAACiC,EAAA,EAAD,CACEC,GAAG,WACHC,KAAK,WACLT,KAAK,WACLU,QAAQ,2CACRC,MAAM,wJACNC,UAAQ,EACRC,YAAY,qBACZ7B,MAAOR,QAGX,SAACsC,EAAA,EAAD,CAAQL,KAAK,SAASzB,MAAOL,EAA7B,SAA2C,WAG3C,SAACoC,EAAA,EAAD,WACE,SAAC,KAAD,CAASC,GAAG,YAAZ,SAAwB,wCAI/B,ECzFD,EAJc,WACZ,OAAO,SAAC,EAAD,GACR,C","sources":["components/LoginForm/LoginForm.jsx","Pages/Login/Login.jsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { FormControl, InputLabel, Input, Button, Typography } from '@mui/material';\nimport { Notify } from 'notiflix';\nimport { NavLink } from 'react-router-dom';\n\nconst formStyles = {\n  display: 'flex',\n  flexDirection: 'column',\n  maxWidth: '300px',\n  margin: '0 auto',\n};\n\nconst labelStyles = {\n  marginTop: '1rem',\n};\n\nconst inputStyles = {\n  width: '100%',\n  marginBottom: '1rem',\n};\n\nconst buttonStyles = {\n  backgroundColor: 'blue',\n  color: 'white',\n  '&:hover': {\n    backgroundColor: 'darkblue', \n  },\n};\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    )\n      .unwrap()\n      .then((originalPromiseResult) => {\n        Notify.success(`${originalPromiseResult.user.name} welcome back!`);\n      })\n      .catch(() => {\n        Notify.failure('Incorrect login or password');\n      });\n\n    form.reset();\n  };\n\n  return (\n    <form style={formStyles} onSubmit={handleSubmit} autoComplete=\"off\">\n      <FormControl>\n        <InputLabel htmlFor=\"email\" style={labelStyles}>\n          Email\n        </InputLabel>\n        <Input\n          id=\"email\"\n          type=\"email\"\n          name=\"email\"\n          pattern=\"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$\"\n          title=\"Email may contain letters, numbers, an apostrophe, and must be followed by '@' domain name '.' domain suffix. For example Taras@ukr.ua, adrian@gmail.com, JacobM3rcer@hotmail.com\"\n          required\n          placeholder=\"Enter email ...\"\n          style={inputStyles}\n        />\n      </FormControl>\n      <FormControl>\n        <InputLabel htmlFor=\"password\" style={labelStyles}>\n          Password\n        </InputLabel>\n        <Input\n          id=\"password\"\n          type=\"password\"\n          name=\"password\"\n          pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\"\n          title=\"Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters. For example TgeV23592, 3Greioct.\"\n          required\n          placeholder=\"Enter password ...\"\n          style={inputStyles}\n        />\n      </FormControl>\n      <Button type=\"submit\" style={buttonStyles}>\n        LogIn\n      </Button>\n      <Typography>\n        <NavLink to=\"/register\">Don't have an account? Sign up!</NavLink>\n      </Typography>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return <LoginForm />;\n};\n\nexport default Login;\n"],"names":["formStyles","display","flexDirection","maxWidth","margin","labelStyles","marginTop","inputStyles","width","marginBottom","buttonStyles","backgroundColor","color","dispatch","useDispatch","style","onSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","value","password","unwrap","then","originalPromiseResult","Notify","user","name","catch","reset","autoComplete","FormControl","InputLabel","htmlFor","Input","id","type","pattern","title","required","placeholder","Button","Typography","to"],"sourceRoot":""}