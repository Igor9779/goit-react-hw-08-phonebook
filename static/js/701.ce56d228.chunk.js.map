{"version":3,"file":"static/js/701.ce56d228.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.jsx","Pages/Login/Login.jsx","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/getTextDecoration.js","../node_modules/@mui/material/Link/Link.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { FormControl, InputLabel, Input, Button, Typography, Link } from '@mui/material';\nimport { Notify } from 'notiflix';\n\nconst formStyles = {\n  display: 'flex',\n  flexDirection: 'column',\n  maxWidth: '300px',\n  margin: '0 auto',\n};\n\nconst labelStyles = {\n  marginTop: '1rem',\n};\n\nconst inputStyles = {\n  width: '100%',\n  marginBottom: '1rem',\n};\n\nconst buttonStyles = {\n  backgroundColor: 'blue',\n  color: 'white',\n  '&:hover': {\n    backgroundColor: 'darkblue', \n  },\n};\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    )\n      .unwrap()\n      .then((originalPromiseResult) => {\n        Notify.success(`${originalPromiseResult.user.name} welcome back!`);\n      })\n      .catch(() => {\n        Notify.failure('Incorrect login or password');\n      });\n\n    form.reset();\n  };\n\n  return (\n    <form style={formStyles} onSubmit={handleSubmit} autoComplete=\"off\">\n      <FormControl>\n        <InputLabel htmlFor=\"email\" style={labelStyles}>\n          Email\n        </InputLabel>\n        <Input\n          id=\"email\"\n          type=\"email\"\n          name=\"email\"\n          pattern=\"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$\"\n          title=\"Email may contain letters, numbers, an apostrophe, and must be followed by '@' domain name '.' domain suffix. For example Taras@ukr.ua, adrian@gmail.com, JacobM3rcer@hotmail.com\"\n          required\n          placeholder=\"Enter email ...\"\n          style={inputStyles}\n        />\n      </FormControl>\n      <FormControl>\n        <InputLabel htmlFor=\"password\" style={labelStyles}>\n          Password\n        </InputLabel>\n        <Input\n          id=\"password\"\n          type=\"password\"\n          name=\"password\"\n          pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\"\n          title=\"Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters. For example TgeV23592, 3Greioct.\"\n          required\n          placeholder=\"Enter password ...\"\n          style={inputStyles}\n        />\n      </FormControl>\n      <Button type=\"submit\" style={buttonStyles}>\n        LogIn\n      </Button>\n      <Typography>\n        <Link to=\"/register\">Don't have an account? Sign up!</Link>\n      </Typography>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return <LoginForm />;\n};\n\nexport default Login;\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;"],"names":["formStyles","display","flexDirection","maxWidth","margin","labelStyles","marginTop","inputStyles","width","marginBottom","buttonStyles","backgroundColor","color","dispatch","useDispatch","style","onSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","value","password","unwrap","then","originalPromiseResult","Notify","user","name","catch","reset","autoComplete","FormControl","InputLabel","htmlFor","Input","id","type","pattern","title","required","placeholder","Button","Typography","Link","to","getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","colorTransformations","primary","textPrimary","secondary","textSecondary","error","theme","ownerState","transformedColor","transformDeprecatedColors","getPath","channelColor","alpha","_excluded","LinkRoot","styled","overridesResolver","props","styles","root","capitalize","underline","component","button","_extends","textDecoration","textDecorationColor","getTextDecoration","position","WebkitTapHighlightColor","outline","border","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","React","inProps","ref","useThemeProps","className","onBlur","onFocus","TypographyClasses","variant","sx","other","_objectWithoutPropertiesLoose","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","focusVisible","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","event","current","Object","keys","includes","Array","isArray"],"sourceRoot":""}